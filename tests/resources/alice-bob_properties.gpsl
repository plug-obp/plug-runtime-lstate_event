//deadlock free
deadlockfree = []!|deadlock|

aliceInCS = |alice.state == 2|
bobInCS = |bob.state == 3|

//mutual exclusion
mutualExclusion = !(aliceInCS && bobInCS)

//if one sets a flag eventually it gets to the critical section
fair = let
	aliceGetsIn = [] (|alice.flag == 1| => <> aliceInCS),
	bobGetsIn = [] (|bob.flag == 1| => <> bobInCS)
in aliceGetsIn && bobGetsIn

//if one does not set the flag it does not get in the critical section
idling = let
	aliceIdle = ([] |alice.flag == 0|) => ([] !aliceInCS),
	bobIdle   = ([] |bob.flag == 0|) => ([] !bobInCS)
in aliceIdle || bobIdle

//each process can enter the critical section infinitely often
often = [] <> (aliceInCS || bobInCS)
