t1 = | clk[t1] |
t2 = | clk[t2] |
p1 = states S0, S1, S2;
    initial S0;
    accept S1;
    S0 0 [ t1   ] S1;
    S0 1 [ true ] S0;
    S1 0 [ t2   ] S2;
    S1 1 [ true ] S1;
    S2 0 [ t1   ] S1;
    S2 1 [ true ] S2 

p2 = states S0, S1;
    initial S0;
    accept S1;
    S0 0 [ t1   ] S1;
    S0 1 [ true ] S0;
    S1 0 [ t2   ] S0;
    S1 1 [ true ] S1

p3ltl = [](t1 -> <> t2)

p3 = states S0, S1;
    initial S0;
    accept S1;
    S0 0 [ t1 and !t2 ] S1;
    S0 0 [ true ] S0;
    S1 0 [ !t2  ] S1    

p4 = states S0, S1;
    initial S0;
    accept S1;
    S0 0 [ t1 ] S1;
    S0 0 [ true ] S0;
    S1 0 [ !t2  ] S1    

p5 = states S0, S1, S2;
    initial S0;
    accept S1, S2;
    S0 0 [ t1 ] S1;
    S0 0 [ true ] S0;
    S1 0 [ !t2  ] S1;
    S1 0 [ t1 ] S2;
    S2 0 [ true ] S2

// e future constr
p6 = states S0, S1, S2;
    initial S0;
    accept S1;
    S0 0 [ t1 ] S1;
    S0 0 [ true ] S0;
    S1 0 [ t1 ] S1;
    S1 0 [ !t2  ] S1;
    S1 0 [ t2 ] S2

// r past constr
p7 = states S0, S1, S2, S3;
    initial S0;
    accept S1, S3;
    S0 0 [ t1 ] S1;
    S0 0 [ true ] S0;
    S1 0 [ !t2 and !t1  ] S1;
    S1 0 [ t2 ] S2;
    S1 0 [ t1 ] S3;
    S3 0 [ true ] S3

    
